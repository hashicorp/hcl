name: Checks

on:
  push:
  workflow_dispatch:
  pull_request:

jobs:
  unit_tests:
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            target: linux_amd64
          - runs-on: windows-latest
            target: windows_amd64
          - runs-on: macos-latest
            target: darwin_amd64
      fail-fast: false

    name: "Unit Tests on ${{ matrix.target }}"
    runs-on: "${{ matrix.runs-on }}"
    steps:
      - name: "Disable git crlf conversions"
        if: ${{ runner.os == 'Windows' }}
        # HCL preserves the input line endings when processing a heredoc,
        # and our tests for heredocs are written to expect the result for
        # the source code as checked in to the repository, so git's normal
        # tampering with the line endings would invalidate those tests.
        run: |
          git config --global core.autocrlf false
      - name: "Fetch source code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - name: Go test
        run: |
          go test -v -race -coverprofile="coverage.out" ./... -coverpkg=./...
      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: coverage.out
          name: coverage-report-${{matrix.target}}
      - name: Display coverage report # displayed only for linux and macOS
        if: ${{runner.os != 'Windows'}}
        run: go tool cover -func=coverage.out | grep -v .rl

  copyright:
    name: "copyright headers"
    runs-on: ubuntu-latest
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.23"
      - name: "copyright headers check"
        run: |
          make copyrightcheck

  govet:
    name: "go vet"
    runs-on: ubuntu-latest
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - name: "go vet"
        run: |
          make vetcheck

  gofmt:
    name: "gofmt"
    runs-on: ubuntu-latest
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - name: "gofmt"
        run: |
          make fmtcheck

  golangci-lint:
    name: "linting"
    runs-on: ubuntu-latest
    steps:
      - name: "Fetch source code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
